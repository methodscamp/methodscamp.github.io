[
  {
    "objectID": "index.html#class-schedule",
    "href": "index.html#class-schedule",
    "title": "Methods Camp",
    "section": "Class schedule",
    "text": "Class schedule\n\n\n\nDate\nTime\nLocation\n\n\n\n\nFri, Aug. 11\n9:00 AM - 4:00 PM\nRLP 1.302B\n\n\nSat, Aug. 12\nNo class\n-\n\n\nSun, Aug. 13\nNo class\n-\n\n\nMon, Aug. 14\n9:00 AM - 4:00 PM\nRLP 1.302B\n\n\nTues, Aug. 15\n9:00 AM - 4:00 PM\nRLP 1.302B\n\n\nWeds, Aug. 16\n9:00 AM - 4:00 PM\nRLP 1.302B\n\n\nThurs, Aug. 17\n9:00 AM - 4:00 PM\nRLP 1.302B\n\n\n\nOn class days, we will have a lunch break from 12:00-1:00 PM. We’ll also take short breaks periodically during the morning and afternoon sessions as needed."
  },
  {
    "objectID": "index.html#description",
    "href": "index.html#description",
    "title": "Methods Camp",
    "section": "Description",
    "text": "Description\nWelcome to Introduction to Methods for Political Science, aka “Methods Camp”! In the past our incoming students have told us their math skills are rusty and they would like to be better prepared for UT’s methods courses. Methods Camp is designed to give everyone a chance to brush up on some skills in preparation for the Stats I and Formal Theory I courses. The other goal of Methods Camp is to allow you to get to know your cohort. We hope that struggling with matrix algebra and the dreaded chain rule will still prove to be a good bonding exercise.\nAs you can see from the above schedule, we’ll be meeting on Friday, August 11th as well as from Monday, August 14th through Thursday, August 17th. Classes at UT begin the start of the following week on Monday, August 22nd. Below is a tentaive schedule outlining what will be covered in the class, although we may rearrange things a bit if we find we’re going too slowly or too quickly through any of the material."
  },
  {
    "objectID": "index.html#course-outline",
    "href": "index.html#course-outline",
    "title": "Methods Camp",
    "section": "Course outline",
    "text": "Course outline\nFriday morning: R and RStudio\n\nIntroductions\nRStudio (materials are on the website as zipped RStudio projects)\nObjects (vectors, matrices, data frames)\nBasic functions (mean(), length(), etc.)\n\n02 Friday afternoon: Tidyverse basics I\n\nPackages: installation and loading (including the tidyverse)\nData wrangling with dplyr (basic verbs, including the new .by = syntax)\nData visualization basics with ggplot2\nData loading (.csv, .rds, .dta/.sav, .xlsx)\nQuarto fundamentals\n\n03 Monday morning: Matrices\n\nMatrices\nSystems of linear equations\nMatrix operations (multiplication, transpose, inverse, determinant).\nSolving systems of linear equations in matrix form (and why that’s cool)\nIntroduction to OLS\n\n04 Monday afternoon: Tidyverse basics II\n\nData merging and pivoting (join(), pivot())\nValue recoding (if_else(), case_when())\nMissing values\nData visualization extensions: facets, text annotations\n\n05 Tuesday morning: Functions and loops\n\nFunctions\nFor-loops and lapply()\nFinding R help (help files, effective Googling, ChatGPT)\n\n06 Tuesday afternoon: Calculus\n\nLimits (not sure how to teach this in an R-centric way yet, but there must be a way)\nDerivatives (symbolic, numerical, automatic)\nIntegrals\n\n07 Wednesday morning: Probability\n\nConcepts: probability, random variables, etc.\nPMF, PDF, CDF, etc.\nDistributions (binomial, normal; different functions in R and how to use them)\nExpectation and variance\n\n08 Wednesday afternoon: Simulations\n\nSimulations (ideas, seed setting, etc.)\nSampling\nBootstrapping\n\n09 Thursday morning: Text analysis\n\nString manipulation with stringr\nSimple text analysis (counts, tf-idf, etc.) with tidytext and visualization\n\n10 Thursday afternoon: Wrap-up\n\nProject management fundamentals (RStudio projects, keeping raw data, etc.)\nSelf-study resources and materials\nOther software (Overleaf, Zotero, etc.)\nMethods at UT"
  },
  {
    "objectID": "index.html#contact-info",
    "href": "index.html#contact-info",
    "title": "Methods Camp",
    "section": "Contact info",
    "text": "Contact info\nIf you have any questions during or outside of methods camp, you can contact Andrés at andres.cruz@utexas.edu and Matt at mjmartin@utexas.edu."
  },
  {
    "objectID": "matrices.html#introduction",
    "href": "matrices.html#introduction",
    "title": "3  Matrices",
    "section": "3.1 Introduction",
    "text": "3.1 Introduction\n\n3.1.1 Scalars\n\nOne number (12, for example) is referred to as a scalar.\nThis can be thought of as a 1x1 matrix.\n\n\n\n3.1.2 Vectors\n\nWe can put several scalars together to make a vector.\nAn example is: \\[\\begin{bmatrix}\n    12 \\\\\n    14 \\\\\n    15\n    \\end{bmatrix}\n    = b\\]\nSince this is a column of numbers, we cleverly refer to it as a column vector.\nAnother example is: \\[\\begin{bmatrix}\n12 & 14 & 15\n\\end{bmatrix}\n= d\\]\nThis is called a row vector."
  },
  {
    "objectID": "matrices.html#operators",
    "href": "matrices.html#operators",
    "title": "3  Matrices",
    "section": "3.2 Operators",
    "text": "3.2 Operators\n\n3.2.1 Summation\n\nRecall the summation operator \\(\\sum\\), which lets us perform an operation on a sequence of numbers (often but not always a vector)\n\n\\[x = \\begin{bmatrix}\n12 & 7 & -2 & 0 & 1\n\\end{bmatrix}\\]\n\nWe can then calculate… \\[\\sum_{i=1}^3 x_i\\]\nWhich is… \\[12+7+-2=17\\]\n\n\n\n3.2.2 Product\n\nRecall the product operator \\(\\prod\\), which can also perform operations over a sequence of numbers\n\n\\[z = \\begin{bmatrix}\n5 & -3 & 5 & 1\n\\end{bmatrix}\\]\n\nWe can then calculate… \\[\\prod_{i=1}^4 z_i\\]\nWhich multiplies out to… \\[5*-3*5*1=-75\\]"
  },
  {
    "objectID": "matrices.html#matrices",
    "href": "matrices.html#matrices",
    "title": "3  Matrices",
    "section": "3.3 Matrices",
    "text": "3.3 Matrices\n\n3.3.1 Basics\n\nWe can append vectors together to form a matrix:\n\n\\[\\begin{bmatrix}\n12 & 14 & 15 \\\\\n115 & 22 & 127 \\\\\n193 & 29 & 219\n\\end{bmatrix}\n= A\\]\n\nWe always refer to the dimensions of matrices by row then column (R x C).\n\nFind a way to remember that knowledge [permanently].\n\nSo, \\(A\\) is a \\(3x3\\) matrix.\n\nNote that matrices are usually designated by capital letters, and sometimes bolded, too.\n\n\n\n\n3.3.2 Structure\n\nHow do we refer to specific elements of the matrix?\nMatrix \\(A\\) is an \\(m\\times n\\) matrix where \\(m=n=3\\)\nMore generally, matrix \\(B\\) is an \\(m\\times n\\) matrix where the elements look like this: \\[B=\n\\begin{bmatrix}\nb_{11} & b_{12} & b_{13} & \\ldots & b_{1n} \\\\\nb_{21} & b_{22} & b_{23} & \\ldots & b_{2n} \\\\\n\\vdots & \\vdots & \\vdots & \\ldots & \\vdots \\\\\nb_{m1} & b_{m2} & b_{m3} & \\ldots & b_{mn}\n\\end{bmatrix}\\]\nThus \\(b_{23}\\) refers to the second unit down and third across."
  }
]